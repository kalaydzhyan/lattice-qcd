c*********************************************************************c
      subroutine fwloop(fwt)
c
c     * for SU(3) Lattice on VP.
c     --------------------------
c
c     * Calculate SU(3) Wilson loops.
c
c     * Before this routine is called, you must once call
c         Dir.
c
c     * Include file
c         paravp3
c
c     * Input arrays
c         /var3/ : the SU(3) configuration generated by Monte
c                  and converted by Dcuxy.
c         /sdb2/ : list vectors calculated by Dir.
c
c     * Output variables
c         fwt    : fwt(n0,n0) (n0=n1/2).
c                  fwt(i,j) is the average value of ixj Wilson loops.
c
c     * Work arrays
c         /wrk5/
c
c     * programmed by S.Kitahara
c     * modified by S.Kitahara. (98.10.15)
c----------------------------------------------------------------------

      include'paravp3'
      parameter (nplaq=nsite*6)

      common /sdb2 / im(nsite,nd,n0),nm(nsite,nd)
      common /var3 / z(nsite,3,3,nd)
      common /wrk5 /zl(nsite,3,3,2),zk(nsite,3,3,2)
     c             ,zw(nsite,3,3),zzw(nsite,3,3)
c     common /wrk5 /zl(nsite,3,3,n0),zk(nsite,3,3,n0)
c    c             ,zw(nsite,3,3),zzw(nsite,3,3)

      dimension fwt(n0,n0)

      do i=1,n0
      do j=1,n0
        fwt(i,j)=0.e0
        fwt(i,j)=0.e0
      enddo
      enddo

      do k=1,nd
      do l=1,k-1

        do ii=1,3
        do jj=1,3
        do m =1,nsite
          zl(m,ii,jj,1)=z(m,ii,jj,l)
          zk(m,ii,jj,1)=z(m,ii,jj,k)
        enddo
        enddo
        enddo

c       do i=2,n0
        do i=2,2
          do ii=1,3
          do jj=1,3
          do m =1,nsite
            mil=im(m,l,i-1)
            zl(m,ii,jj,i)=zl(m,ii,1,i-1)*z(mil,1,jj,l)
     c                   +zl(m,ii,2,i-1)*z(mil,2,jj,l)
     c                   +zl(m,ii,3,i-1)*z(mil,3,jj,l)
            mik=im(m,k,i-1)
            zk(m,ii,jj,i)=zk(m,ii,1,i-1)*z(mik,1,jj,k)
     c                   +zk(m,ii,2,i-1)*z(mik,2,jj,k)
     c                   +zk(m,ii,3,i-1)*z(mik,3,jj,k)
          enddo
          enddo
          enddo
        enddo

c       do i=1,n0
c       do j=1,n0
        do i=1,2
        do j=1,2
          do ii=1,3
          do jj=1,3
          do m =1,nsite
            mj=im(m,k,j)
            zw(m,ii,jj) =zk(m,ii,1,j)*zl(mj,1,jj,i)
     c                  +zk(m,ii,2,j)*zl(mj,2,jj,i)
     c                  +zk(m,ii,3,j)*zl(mj,3,jj,i)
            mi=im(m,l,i)
            zzw(m,ii,jj)=zl(m,ii,1,i)*zk(mi,1,jj,j)
     c                  +zl(m,ii,2,i)*zk(mi,2,jj,j)
     c                  +zl(m,ii,3,i)*zk(mi,3,jj,j)
          enddo
          enddo
          enddo
          ztr=(0.e0,0.e0)
          do ii=1,3
          do m =1,nsite
            ztr   =ztr
     c            +zzw(m,ii,1)*dconjg(zw(m,ii,1))
     c            +zzw(m,ii,2)*dconjg(zw(m,ii,2))
     c            +zzw(m,ii,3)*dconjg(zw(m,ii,3))
          enddo
          enddo
          fwt(i,j)=fwt(i,j)+dble(ztr)
        enddo
        enddo

      enddo
      enddo

c     do i=1,n0
c     do j=i,n0
      do i=1,2
      do j=i,2
        fwt(i,j)=(fwt(i,j)+fwt(j,i))/(nplaq*6)
      enddo
      enddo

      return
      end
c*********************************************************************c
